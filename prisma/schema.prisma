// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  username    String?
  password    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  tasks       Task[]
  
  @@index([email])
}

model Task {
  id          String        @id @default(uuid())
  title       String
  description String?       @db.Text
  status      TaskStatus    @default(todo)
  priority    TaskPriority  @default(low)
  dueDate     DateTime?
  creator     User          @relation(fields: [creatorId], references: [id])
  creatorId   String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  subtasks    Subtask[]
  labels      Label[]

  @@index([creatorId])
}

enum TaskStatus {
  todo
  in_progress
  done
}

enum TaskPriority {
  low
  medium
  high
}

model Subtask {
  id          String        @id @default(uuid())
  task        Task          @relation(fields: [taskId], references: [id])
  taskId      String        
  title       String
  status      TaskStatus    @default(todo)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([taskId])
}

model Label {
  id          String        @id @default(uuid())
  name        String
  tasks       Task[]
}
